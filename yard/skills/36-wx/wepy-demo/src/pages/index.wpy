<style lang="less">
  .w90 {
    width: 90%;
  }
  .userInfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .userInfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }
  .userInfo-nickName {
    color: #aaa;
  }
  .counterview {
  }
</style>

<template>
<view class="container">
  {{subject}}

  <view class="userInfo" @tap="handleViewTap">
    <image class="userInfo-avatar" src="{{userInfo.avatarUrl}}" background-size="cover" />
    <view  class="userInfo-nickName"> {{userInfo.nickName}}</view>
  </view>

  <title1 @color-change.user="onTitleColorChange" />
  <title2 :value.sync="subject"/>

  <button class="weui-btn mini-btn" type="primary" size="mini">按钮</button>
  <button class="weui-btn mini-btn" type="default" size="mini">按钮</button>
  <button class="weui-btn mini-btn" type="warn" size="mini">按钮</button>


  <panel>
    <view class="title" slot="slot1" @tap="communicate">计数组件</view>
    <!-- 绑定用户事件 -->
    <view class="counterview w90">
      <counter1 @index-emit.user="onCounterEmit" />
    </view>
    <!-- 绑定数据 -->
    <view class="counterview w90">
      <counter2 :num.sync="age" />
    </view>
  </panel>

  <panel>
    <view class="title" slot="slot1">测试组件SwiperDeleteList</view>
    <view class="w90">
      <demoList />
    </view>
  </panel>

  <demoGroup />

  <panel>
    <view class="title" slot="slot1">列表组件</view>
    <view class="w90">
      <list1 />
    </view>
  </panel>

  <toast />
</view>
</template>

<script>
  import wepy from 'wepy';
  import Toast from 'wepy-com-toast';
  import bbxyard from 'bbxyard';
  import DemoList  from '../components/demolist';
  import DemoGroup from '../components/demoXBGroup';
  import MyTitle   from '../components/xbTitle';
  import MyPanel   from '../components/xbPanel';
  import MyList    from '../components/xbList';
  import MyCounter from '../components/xbCounter';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'WepyIsAwesome'
    }

    components = {
      title1: MyTitle,
      title2: MyTitle,
      counter1: MyCounter,
      counter2: MyCounter,
      demoList: DemoList,
      demoGroup: DemoGroup,
      panel: MyPanel,
      list1: MyList,
      toast: Toast
    }

    data = {
      subject: 'Wepy and UI demo',
      age: 32,
      userInfo: {
        nickName: 'Brian',
        avatarUrl: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      }
    }

    methods = {
      communicate() {
        console.log(this.$name + ' tap');

        this.$invoke('counter2', 'minus', 45, 6);
        this.$invoke('counter1', 'plus',  45, 6);
        this.$broadcast('index-broadcast', 1, 3, 4);
      },
      onCounterEmit(...args) {
        let $event = args[args.length - 1];
        console.log(this.genEventLogPrefix('onCounterEmit', $event));
      },
      onTitleColorChange(...args) {
        let color = args[0];
        let $event = args[args.length - 1];
        let prefix = this.genEventLogPrefix('onTitleColorChange', $event);
        console.log(`${prefix} where new-color=${color}`);
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1];
        console.log(this.genEventLogPrefix('events-index-emit', $event));
      },
      'color-change': (...args) => {
        let color = args[0];
        let $event = args[args.length - 1];
        let prefix = this.genEventLogPrefix('events-color-change', $event);
        console.log(`${prefix} where new-color=${color}`);
      }
    }

    genEventLogPrefix(func, event) {
      let prefix = `${func} | ${this.$name} receive ${event.name} from ${event.source.$name}`;
      return prefix;
    }

    onLoad() {
      console.log('onLoad');
      bbxyard.welcome();

      let promise = this.$invoke('toast', 'show', {
        title: 'Just',
        img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      });

      promise.then((d) => {
        console.log('toast done');
      });

      let self = this;
      this.$parent.getUserInfo(function(userInfo) {
        if (userInfo) {
          self.userInfo = userInfo;
        }
        self.$apply();
      });
    }
  }
</script>
